$date
	Mon Apr 29 22:29:32 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module pwm_capture_tb $end
$var wire 1 ! tx_start $end
$var wire 8 " tx_data [7:0] $end
$var reg 1 # bps_start_t $end
$var reg 1 $ capture_tx_rst $end
$var reg 1 % clk $end
$var reg 1 & enable $end
$var reg 1 ' pwm_input $end
$var reg 1 ( rst_n $end
$var reg 1 ) tx_complete $end
$scope module pwm_capture_inst $end
$var wire 1 # bps_start_t $end
$var wire 1 $ capture_tx_rst $end
$var wire 1 % clk $end
$var wire 1 & enable $end
$var wire 1 ' pwm_input $end
$var wire 1 ( rst_n $end
$var wire 1 ) tx_complete $end
$var wire 1 ! tx_start $end
$var wire 1 * tx_end $end
$var wire 8 + tx_data [7:0] $end
$var wire 1 , pos_btn $end
$var wire 1 - neg_btn $end
$var reg 32 . counter [31:0] $end
$var reg 32 / dutycyclecounter [31:0] $end
$var reg 32 0 neg_counter [31:0] $end
$var reg 1 1 neg_counter_flag $end
$var reg 32 2 nextpos_counter [31:0] $end
$var reg 1 3 nextpos_counter_flag $end
$var reg 32 4 periodcounter [31:0] $end
$var reg 32 5 pos_counter [31:0] $end
$var reg 1 6 pos_counter_flag $end
$var reg 1 7 ready $end
$scope module captuer_tx_instance $end
$var wire 1 # bps_start_t $end
$var wire 1 7 capture_ready $end
$var wire 1 $ capture_tx_rst $end
$var wire 1 % clk $end
$var wire 32 8 dutycyclecounter [31:0] $end
$var wire 32 9 periodcounter [31:0] $end
$var wire 1 ( rst_n $end
$var wire 1 ) tx_complete $end
$var reg 4 : tx_count [3:0] $end
$var reg 16 ; tx_counter [15:0] $end
$var reg 8 < tx_data [7:0] $end
$var reg 1 * tx_end $end
$var reg 1 ! tx_start $end
$upscope $end
$scope module neg_capture_instance $end
$var wire 1 % clk $end
$var wire 1 & enable $end
$var wire 1 - neg_btn $end
$var wire 1 ' pwm_input $end
$var wire 1 ( rst_n $end
$var reg 1 = btn1 $end
$var reg 1 > btn2 $end
$upscope $end
$scope module pos_capture_instance $end
$var wire 1 % clk $end
$var wire 1 & enable $end
$var wire 1 , pos_btn $end
$var wire 1 ' pwm_input $end
$var wire 1 ( rst_n $end
$var reg 1 ? btn1 $end
$var reg 1 @ btn2 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1@
1?
0>
0=
bz <
b0 ;
bx :
b0 9
b0 8
07
06
b0 5
b0 4
03
b0 2
01
b0 0
b0 /
b0 .
0-
0,
bz +
x*
x)
0(
x'
x&
0%
x$
x#
bz "
1!
$end
#10000
1%
#20000
0%
1(
#30000
1%
#40000
0%
#50000
1%
#60000
0%
#70000
1%
#80000
0%
#90000
1%
#100000
0%
#110000
1%
#120000
0%
#130000
1%
#140000
0%
#150000
1%
#160000
0%
#170000
1%
#180000
0%
#190000
1%
#200000
0%
#210000
1%
#220000
0%
#230000
1%
#240000
0%
#250000
1%
#260000
0%
#270000
1%
#280000
0%
#290000
1%
#300000
0%
#310000
1%
#320000
0%
#330000
1%
#340000
0%
#350000
1%
#360000
0%
#370000
1%
#380000
0%
#390000
1%
#400000
0%
#410000
1%
#420000
0%
#430000
1%
#440000
0%
#450000
1%
#460000
0%
#470000
1%
#480000
0%
#490000
1%
#500000
0%
#510000
1%
#520000
0%
#530000
1%
#540000
0%
#550000
1%
#560000
0%
#570000
1%
#580000
0%
#590000
1%
#600000
0%
#610000
1%
#620000
0%
#630000
1%
#640000
0%
#650000
1%
#660000
0%
#670000
1%
#680000
0%
#690000
1%
#700000
0%
#710000
1%
#720000
0%
#730000
1%
#740000
0%
#750000
1%
#760000
0%
#770000
1%
#780000
0%
#790000
1%
#800000
0%
#810000
1%
#820000
0%
#830000
1%
#840000
0%
#850000
1%
#860000
0%
#870000
1%
#880000
0%
#890000
1%
#900000
0%
#910000
1%
#920000
0%
#930000
1%
#940000
0%
#950000
1%
#960000
0%
#970000
1%
#980000
0%
#990000
1%
#1000000
0%
